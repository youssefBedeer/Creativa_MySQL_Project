import streamlit as st 
from db_connection import Database 
from commands.factory import CommandFactory
from utils import dynamic_form

# ---------------- ÿ¨ŸÑÿ® ÿ£ÿ≥ŸÖÿßÿ° ÿßŸÑÿ¨ÿØÿßŸàŸÑ ŸÖŸÜ ŸÇÿßÿπÿØÿ© ÿßŸÑÿ®ŸäÿßŸÜÿßÿ™ ----------------
db = Database(db="company")
db.cursor.execute("SHOW TABLES")
tables = [row[f"Tables_in_{db.database}"] for row in db.cursor.fetchall()]

# ÿßÿÆÿ™Ÿäÿßÿ± ÿßŸÑÿ¨ÿØŸàŸÑ ÿ®ÿ¥ŸÉŸÑ ÿØŸäŸÜÿßŸÖŸäŸÉŸä
table_name = st.selectbox("ÿßÿÆÿ™ÿ± ÿßŸÑÿ¨ÿØŸàŸÑ:", tables)

# ---------------- ÿπÿ±ÿ∂ ÿßŸÑÿ¨ÿØŸàŸÑ ----------------
if st.button("üìÑ ÿπÿ±ÿ∂ ÿßŸÑÿ¨ÿØŸàŸÑ"):
    cmd = CommandFactory.create_command("show_table", table_name, [])
    df = cmd.execute()
    if df.empty:
        st.info("‚ö†Ô∏è ÿßŸÑÿ¨ÿØŸàŸÑ ŸÅÿßÿ±ÿ∫")
    else:
        st.dataframe(df)

# ---------------- ÿ•ÿ∂ÿßŸÅÿ© ÿµŸÅ ÿ¨ÿØŸäÿØ ----------------
# ÿ¨ŸÑÿ® ÿßŸÑÿ£ÿπŸÖÿØÿ© ŸÖÿπ ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑŸÜŸàÿπ
st.subheader("‚ûï Add New Row")

data = dynamic_form(f"{table_name}")  # ÿ£Ÿä ÿ¨ÿØŸàŸÑ

if data and st.button("Add Row"):
    try:
        CommandFactory.create_command("add_row", table_name, data).execute()
        st.success("‚úÖ Added Successfully")
    except Exception as e:
        st.error(f"‚ùå Error adding row: {e}")



# ---------------- ÿ≠ÿ∞ŸÅ ÿµŸÅ ----------------
st.subheader("üóëÔ∏è Delete Row WHERE")
delete_column = st.text_input("Column Name")
delete_value = st.text_input("Value")
if st.button("Delete"):
    if delete_column and delete_value:
        cmd = CommandFactory.create_command("delete_row", table_name, delete_column, delete_value)
        cmd.execute()
        st.success(f"‚úÖ Deleted -->{delete_column} = {delete_value}")
    else:
        st.warning("‚ö†Ô∏è Add ")